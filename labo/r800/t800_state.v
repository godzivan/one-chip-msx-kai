//
//  t800_state.v
//   State
//
//  Copyright (C) 2020 Takayuki Hara
//  All rights reserved.
//                               http://hraroom.s602.xrea.com/msx/ocm/index.html
//
//  本ソフトウェアおよび本ソフトウェアに基づいて作成された派生物は、以下の条件を
//  満たす場合に限り、再頒布および使用が許可されます。
//
//  1.ソースコード形式で再頒布する場合、上記の著作権表示、本条件一覧、および下記
//    免責条項をそのままの形で保持すること。
//  2.バイナリ形式で再頒布する場合、頒布物に付属のドキュメント等の資料に、上記の
//    著作権表示、本条件一覧、および下記免責条項を含めること。
//  3.書面による事前の許可なしに、本ソフトウェアを販売、および商業的な製品や活動
//    に使用しないこと。
//
//  本ソフトウェアは、著作権者によって「現状のまま」提供されています。著作権者は、
//  特定目的への適合性の保証、商品性の保証、またそれに限定されない、いかなる明示
//  的もしくは暗黙な保証責任も負いません。著作権者は、事由のいかんを問わず、損害
//  発生の原因いかんを問わず、かつ責任の根拠が契約であるか厳格責任であるか（過失
//  その他の）不法行為であるかを問わず、仮にそのような損害が発生する可能性を知ら
//  されていたとしても、本ソフトウェアの使用によって発生した（代替品または代用サ
//  ービスの調達、使用の喪失、データの喪失、利益の喪失、業務の中断も含め、またそ
//  れに限定されない）直接損害、間接損害、偶発的な損害、特別損害、懲罰的損害、ま
//  たは結果損害について、一切責任を負わないものとします。
//
//  Note that above Japanese version license is the formal document.
//  The following translation is only for reference.
//
//  Redistribution and use of this software or any derivative works,
//  are permitted provided that the following conditions are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above
//     copyright notice, this list of conditions and the following
//     disclaimer in the documentation and/or other materials
//     provided with the distribution.
//  3. Redistributions may not be sold, nor may they be used in a
//     commercial product or activity without specific prior written
//     permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
//  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
//  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
//  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
//  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
//  POSSIBILITY OF SUCH DAMAGE.

module t800_state (
	input			reset,
	input			clk,
	input			clk_en,

	output			mem_req,
	output			mem_write,
	input			mem_ready,
	output	[15:0]	mem_a,
	output	[ 7:0]	mem_d,
	input	[ 7:0]	mem_q
);
	reg		[ 4:0]	ff_state;

	local parameter	c_fetch0	= 5'd0;
	local parameter	c_memwr0	= 5'd1;
	local parameter	c_memrd0	= 5'd2;
	local parameter	c_iowr0		= 5'd3;
	local parameter	c_iord0		= 5'd4;
	local parameter	c_memwr1	= 5'd5;
	local parameter	c_memwr2	= 5'd6;
	local parameter	c_memrd1	= 5'd7;
	local parameter	c_memwr3	= 5'd8;
	local parameter	c_fetch1	= 5'd9;
	local parameter	c_fetch2	= 5'd10;
	local parameter	c_fetch3	= 5'd11;
	local parameter	c_iowr1		= 5'd12;
	local parameter	c_fetch4	= 5'd13;
	local parameter	c_iord1		= 5'd14;
	local parameter	c_fetch5	= 5'd15;
	local parameter	c_fetch6	= 5'd16;
	local parameter	c_fetch7	= 5'd17;
	local parameter	c_fetch8	= 5'd18;
	local parameter	c_branch0	= 5'd19;
	local parameter	c_fetch9	= 5'd20;
	local parameter	c_fetch10	= 5'd21;
	local parameter	c_memwr4	= 5'd22;
	local parameter	c_memwr5	= 5'd23;
	local parameter	c_memwr6	= 5'd24;
	local parameter	c_memwr7	= 5'd25;

	always @( posedge reset or posedge clk ) begin
		if( reset ) begin
			ff_state		<= 5'd0;
			ff_decode_en	<= 1'b0;
		end
		else if( clk_en ) begin
			case( ff_state )
			c_fetch0:
				begin
					if( mem_ready ) begin
						ff_decode_en <= 1'b1;
					end
					else begin
						ff_decode_en <= 1'b1;
					end
				end
			c_fetch1, c_fetch2, c_fetch3
			c_fetch4:
			c_fetch5:
			c_fetch6:
			c_fetch7:
			c_fetch8:
			c_fetch9:
			c_fetch10:

			c_memwr0:
			c_memwr1:
			c_memwr2:
			c_memwr3:
			c_memwr4:
			c_memwr5:
			c_memwr6:
			c_memwr7:

			c_memrd0:
			c_memrd1:

			c_iowr0:
			c_iowr1:
			c_iord0:
			c_iord1:

			c_branch0:
			endcase
		end
		else begin
			//	hold
		end
	end
endmodule
